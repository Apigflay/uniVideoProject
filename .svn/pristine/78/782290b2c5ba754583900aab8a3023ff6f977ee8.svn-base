<template>
	<view class="content">
		<view class="nav">
			<image class="img" src="../../static/imgs/more1w.png" mode="" @click="goBackPage"></image>
			<text class="title">信息编辑</text>
			<text class="save" @click="keepMsg">保存</text>
		</view>
		<view class="bgArea">
			<image class="bg" src="../../static/imgs/19032400.jpg" mode=""></image>
			<view class="phoArea">
				<image class="photo" src="../../static/imgs/bird1.png" mode=""></image>
				<image class="camera" src="../../static/imgs/camera1w.png" mode="" @click="upLoadImg(1)"></image>
			</view>
			<image class="choosebg" src="../../static/imgs/camera1w.png" mode="" @click="upLoadImg(2)"></image>
		</view>
		<view class="introductionArea">
			<view class="name">
				<text class="text">用户名</text>
				<text class="text">@232</text>
				<!-- <input class="input" type="text" placeholder="请输入用户名" /> -->
			</view>
			<view class="p">
				<text class="tltle">用户说明</text>
				<text class="num">{{textAreaLegth}}/150</text>
			</view>
			<view class="textArea">
				<textarea class="text" v-model="textArea" placeholder-style="color:rgba(116,116,116,1)" placeholder="" :maxlength="150" @input="getTextLength"/>
			</view>
		</view>
	</view>
</template>

<script>
	import {encrypt,decrypt,system,systemId,base64ToArrayBuffer,sendData,sendD,sendD15,work,regMail} from "../../lib/js/GlobalFunction.js"
	export default {
		data() {
			return {
				loginMsgData:null,//登录信息
				textAreaLegth:0,//textarea长度
				textArea:'',//textarea内容
			};
		},
		onLoad() {//监听页面加载，其参数为上个页面传递的数据，参数类型为Object
				this.getLoginMsg()//
				this.getMyInfoMsg()
		},
		methods:{
			getLoginMsg:function(){
				var that = this;
				uni.getStorage({
					key: 'storage_login_str',
					success: function (res) {
						that.loginMsgData = JSON.parse(res.data);
						console.log(that.loginMsgData);
					}
				});
			},
			getTextLength:function(event){//动态获取长度
				this.textAreaLegth=event.target.value.length;
			},
			goBackPage:function(){//返回资料页面
				uni.navigateTo({
					url: '/pages/anchorme/anchorme'
				});
			},
			keepMsg:function(){//保存资料   //ws://192.168.1.104:17400
				// console.log(this.loginMsgData.isAnchor)
				// console.log(this.loginMsgData.useridx)
				// console.log(this.textArea)
				// var array =JSON.stringify({
				// 	"useridx": this.loginMsgData.useridx,
				// 	"signature": this.textArea
				// })
				// console.log(array)
				// var arr = sendD15(array);
				// 
				// // console.log(this.GLOBAL)
				// console.log(this.$Socket)
				// console.log(this.$Socket.isconnect)
				// this.$Socket.nsend(arr)  //放射一个数据到服务器
				// 
				// this.$Socket.eventPatch.onMsg((msg,sk)=>{    //监听是否接受消息
				// 	console.log(msg)
				// 	console.log(sk)
				// 	     var fileReader = new FileReader();
				// 	     fileReader.onload = function (progressEvent) {
				// 	     	var arrayBuffer = this.result; // arrayBuffer即为blob对应的arrayBuffer
				// 	     	var HeadRecv = new Uint32Array(arrayBuffer, 0, 3);
				// 	     	var strArray = new Uint8Array(arrayBuffer, 12, HeadRecv[0] - 12 - 1);
				// 	     	var str = new TextDecoder().decode(strArray);//{"code":-1,"error":"用户名或密码错误"}
				// 	     	// console.log(HeadRecv[1],JSON.parse(str))
				// 	     	//to do
				// 			// if(HeadRecv[1]==10002){
				// 			// 	uni.navigateTo({
				// 			// 		url: '/pages/home/home'
				// 			// 	});
				// 			// 	uni.setStorage({
				// 			// 		key: 'storage_login_str',
				// 			// 		data: str,
				// 			// 		success: function () {
				// 			// 			console.log('success');
				// 			// 		}
				// 			// 	});
				// 			// }else{
				// 			// 	uni.showToast({
				// 			// 		title: '标题',
				// 			// 		duration: 1500
				// 			// 	});
				// 			// }
				// 	     	console.log(HeadRecv[1])
				// 	     	console.log(JSON.parse(str))
				// 	     };
				// 	     fileReader.readAsArrayBuffer(msg.data);
				// });
		// -------------------------------------------------------------------------
				var array =JSON.stringify({
					"useridx": this.loginMsgData.useridx,
					"signature": this.textArea
				})
				console.log(array)
				var arr = sendD15(array);
				// 
				uni.connectSocket({
					url:this.GLOBAL.urlSocketPoint,
				});
				uni.onSocketOpen(function (res) {
					// console.log(res)
				  console.log('WebSocket连接已打开！');
				  uni.sendSocketMessage({
				    data:arr,//arr
				    success:function(res1){
						console.log(res1)
				    },
				    fail:function(err){
				  	 console.log(err)
				    },
				    complete:function(com){
				  	  // console.log(com)
				    }
				  });
				  uni.onSocketMessage(function (res2) {
				  	console.log(res2.data)
				  			  
				     var fileReader = new FileReader();
				     fileReader.onload = function (progressEvent) {
				     	var arrayBuffer = this.result; // arrayBuffer即为blob对应的arrayBuffer
				     	var HeadRecv = new Uint32Array(arrayBuffer, 0, 3);
				     	var strArray = new Uint8Array(arrayBuffer, 12, HeadRecv[0] - 12 - 1);
				     	var str = new TextDecoder().decode(strArray);//{"code":-1,"error":"用户名或密码错误"}
				     	// console.log(HeadRecv[1],JSON.parse(str))
				     	//to do
						// if(HeadRecv[1]==10002){
						// 	uni.navigateTo({
						// 		url: '/pages/home/home'
						// 	});
						// 	uni.setStorage({
						// 		key: 'storage_login_str',
						// 		data: str,
						// 		success: function () {
						// 			console.log('success');
						// 		}
						// 	});
						// }else{
						// 	uni.showToast({
						// 		title: '标题',
						// 		duration: 1500
						// 	});
						// }
				     	console.log(HeadRecv[1])
				     	console.log(JSON.parse(str))
				     };
				     fileReader.readAsArrayBuffer(res2.data);
				  	
				      
				    });
				  	  
				  });
				  ////---------------------------------s
			},
			upLoadImg:function(typeId){//upload HeaderPic  bgPic
				console.log(typeId)
				var that =this;
				uni.chooseImage({
					count:1,//图片数量
					sizeType:['compressed '],//压缩图
					sourceType:['album','camera'],//相册 相机
					success: function (res) {
						// console.log(res)
						uni.request({
							url: res.tempFilePaths[0],
							method:'GET',
							responseType: 'arraybuffer',
							success: ress => {
								// console.log(ress.data)//流
								let base64 = wx.arrayBufferToBase64(ress.data); //把arraybuffer转成base64 
								base64 = 'data:image/jpeg;base64,' + base64 //不加上这串字符，在页面无法显示的哦
								// console.log(base64)
								// ------------------2222-----
								// 将base64转换为文件对象
								function dataURLtoFile(dataurl, filename) {
								  var arr = dataurl.split(',');
								  var mime = arr[0].match(/:(.*?);/)[1];
								  var bstr = atob(arr[1]);
								  var n = bstr.length; 
								  var u8arr = new Uint8Array(n);
								  while(n--){
									  u8arr[n] = bstr.charCodeAt(n);
								  }
								  // 转换成file对象
								  return new File([u8arr], filename, {type:mime});//FormData File
								  // 转换成成blob对象
								  // return new Blob([u8arr],{type:mime});
								}
								// 将图片转换为base64,再将base64转换成file对象
								var file=dataURLtoFile(base64,'imgHeader')
								// console.log(file)
								// --------------2222
								console.log(typeId)
								var formData = new FormData();
								formData.append('picture',file);
								formData.append('userIdx',that.loginMsgData.useridx);//that.loginMsgData.useridx
								formData.append('token',that.loginMsgData.webtoken);//that.loginMsgData.webtoken
								formData.append('Type',typeId);

								var xhr = new XMLHttpRequest;
								xhr.open('POST','http://60.191.222.11:8044/userinfo/UploadHeaderImg', false);
								xhr.send(formData);
								// console.log(xhr.responseText)
								console.log(decrypt(xhr.responseText))
								var resObj=JSON.parse(decrypt(xhr.responseText))
								if(resObj.code==100){
									uni.showToast({
										title: '上传成功',
										duration: 1500,
										success:function(res){
											
										}
									});
									
								}
								
								that.getMyInfoMsg()
								
							}
						})
						
					}
				});
				// -
			},
			// ---------
			getMyInfoMsg:function(){
				// console.log(this.loginMsgData.useridx)
				var array=base64ToArrayBuffer(encrypt(JSON.stringify({
					UserIdx:this.loginMsgData.useridx,//	int
				})))
				var res = JSON.parse(decrypt(sendData('POST',this.GLOBAL.urlPoint+'/userinfo/GetCatUserInfo',array)));
				if(res.code==100){
					console.log(res.data)
				}
			},
			
			//------------
		}
	}
</script>

<style lang="scss">
page{
	width: 100%;
	height: 100%;
}
.content{
	width: 100%;
	height: 100%;
	background:rgba(25,25,25,1);
	// -----nav---
	.nav{
		height: 100rpx;
		display: flex;
		justify-content: space-between;
		align-items: center;
		background:rgba(37,37,37,1);
		.img{
			height: 30rpx;
			width: 30rpx;
			padding: 10rpx;
			margin-left: 20rpx;
		}
		.title{
			font-size:30rpx;
			font-weight:400;
			color:rgba(255,255,255,1);
		}
		.save{
			font-size:30rpx;
			font-family:PingFang TC;
			font-weight:400;
			color:rgba(255,214,0,1);
			padding: 10rpx;
			margin-right: 30rpx;
		}
	}
	// ----bgArea----
	.bgArea{
		height: 370rpx;
		position: relative;
		border-bottom: 2rpx solid rgba(116,116,116,1);
		.bg{
			position: absolute;
			top:0;
			left: 0;
			width: 100%;
			height: 370rpx;
		}
		.phoArea{
			position: absolute;
			top:100rpx;
			left: 285rpx;
			width: 180rpx;
			height: 180rpx;
			.photo{
				width: 176rpx;
				height: 176rpx;
				border:2rpx solid #fff;
				border-radius: 50%;
			}
			.camera{
				position: absolute;
				top:120rpx;
				left: 120rpx;
				width: 60rpx;
				height: 60rpx;
				border-radius: 50%;
			}
		}
		.choosebg{
			position: absolute;
			bottom:28rpx;
			right: 28rpx;
			width: 60rpx;
			height: 60rpx;
			border-radius: 50%;
		}
	}
	// ---introductionArea---
	.introductionArea{
		width: 680rpx;
		padding:0 35rpx;
		.name{
			height: 85rpx;
			border-bottom:2rpx solid rgba(116,116,116,1);
			display: flex;
			align-items: center;
			.text{
				font-size:30rpx;
				color:rgba(255,255,255,1);
				margin-right:28rpx;
			}
			.input{
				font-size:30rpx;
				color:rgba(116,116,116,1);
			}
		}
		.p{
			height: 30rpx;
			margin:28rpx 0;
			display: flex;
			justify-content: space-between;
			align-items: center;
			.tltle{
				font-size:30rpx;
				color:rgba(255,255,255,1);
			}
			.num{
				font-size:22rpx;
				color:rgba(116,116,116,1);
			}
		}
		.textArea{
			background:rgba(46,46,46,1);
			border-radius:8px;
			.text{
				width: 100%;
				min-height:211rpx;
				border-radius:8px;
				color:rgba(116,116,116,1);
			}
		}
			
	}
}
</style>
