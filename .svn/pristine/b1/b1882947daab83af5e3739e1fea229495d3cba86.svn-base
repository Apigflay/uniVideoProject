<template>
<view class="contentBox">
	<scroll-view scroll-y="true" @scrolltolower="getNewlist" @scroll="getScrollTopMsg" class="scrollView">
		<view class="main">
			<!-- top -->
			<view class="top">
				<image class="img" src="../../static/pictures/shezhi_1.png" @click="goDatasetPage"></image>
				<view class="imgArea" @click="goPay()">
					<image class="size" src="../../static/imgs/goldM2.png"></image>
					<text class="font">{{tabbarLoginData.cash}}</text>
				</view>
			</view>
			<!-- top -->
			<!-- top 上推 出现层 -->
			<view v-if="show" class="move">
				<text class="p">{{name}}</text>
			</view>
			<view v-if="show1" class="move1">
				<text class="p">{{this.Language.language[this.tabbarLoginLanguage].language65}}</text>
			</view>
			<!-- top 上推 出现层 -->
			<!-- top 背景 -->
			<view :style="{backgroundImage: 'url(' + tabbarLoginData.background + ')', backgroundSize:'cover',backgroundPosition:'center'}" class="top_bj"></view>
			<!-- top 背景 -->
			<!-- center -->
			<view class="center">
				<image :src="tabbarLoginData.headpic" class="photo"></image>
				<view class="follow" @click="goFollow()">
					<text class="p">{{mymsg.Follow}}</text>
					<text class="p1">{{this.Language.language[this.tabbarLoginLanguage].language62}}</text>
				</view>
				<view class="follow" @click="goFans()">
					<text class="p">{{mymsg.Fans}}</text>
					<text class="p1">{{this.Language.language[this.tabbarLoginLanguage].language63}}</text>
				</view>
				<view class="edit" @click="goUpdateMsg">
					<image src="../../static/pictures/edit_1.png" class="img"></image>
					<text class="p">{{this.Language.language[this.tabbarLoginLanguage].language64}}</text>
				</view>
			</view>
			<!-- center -->
			<!-- center1 -->
			<view class="center1">
			</view>
			<!-- center1 -->
			<!-- name 账号-->
			<view class="name">
				{{tabbarLoginData.nickname}}
			</view>
			<!-- name -->
			<!-- 商品，收益 管理 -->
			<!-- <view class="commodity " @click="goProductPage">
				<text class="p">商品管理</text>
				<image class="img" src="../../static/pictures/gengduo_1.png"></image>
			</view>
			<view class="profit"  @click="goRecivePage">
				<text class="p">收益管理</text>
				<image class="img" src="../../static/pictures/gengduo_1.png"></image>
			</view> -->
			<!-- 商品，收益 管理 -->
			<!-- purchased  已购买商品 -->
			<view class="purchased ">
				<view class="p">
					<text class="p1">{{this.Language.language[this.tabbarLoginLanguage].language65}}</text>
				</view>
				<view class="list">
					<!-- model1Data -->
					<view class="pro" v-for="(item,index) in model1Data" :key="index" :id="index" @click="goVideolist(item)">
						<image :src="item.SmallPic" class="photo"></image>
						<view class="id">
							<text class="p1">{{item.MyName}}</text>
							<view v-show=item.status class="status"></view>
						</view>
						<text class="p2">{{item.Cont}}{{fy_tw[tabbarLoginLanguage]}}</text>
					</view>
				</view>
			</view>
			<!-- purchased  -->
			<!-- TagBar -->
			<view class="tabbarArea">
				<view class="per" v-for="(item,index) in tabbarData" :key="index" :id="index" @click="getClickPer">
					<image class="img" :src="item.imgsrcW" mode=""></image>
				</view>
			</view>
			<view class="bottomFix">
				
			</view>
		</view>
	</scroll-view>
</view>
</template>

<script>
	import {encrypt,decrypt,system,systemId,base64ToArrayBuffer,sendData,sendD,work,sendD07,navigateTo} from "../../lib/js/GlobalFunction.js"
	export default {
		data() {
			return {
				tabbarLoginLanguage: null, // 用户语言
				show: false,
				show1: false,
				UserIdx: null, // 用户IDX
				AnchorIdx: null, // 主播IDX
				Page: 1, // 刷新加载数据时的当前页数
				Type: 0, // 当前连接接口的类型                     —0列表 1-点击主播头像获取列表
				pageId: 17, // 页面跳转时需要的本页面的ID
				// tabbar--
				tabbarLoginData:null,//loginMsg
				isAnchor:null,//是否为主播
				tabbarCurrent:0,//点击的索引
				tabbarData:[{imgsrcB:'../../static/imgs/room1w.png',imgsrcW:'../../static/imgs/room1w.png',text:'1'},
					{imgsrcB:'../../static/imgs/fang1w.png',imgsrcW:'../../static/imgs/fang1w.png',text:'2'},
					{imgsrcB:'../../static/imgs/mail1w.png',imgsrcW:'../../static/imgs/mail1w.png',text:'3'},
					{imgsrcB:'../../static/imgs/xin1w.png',imgsrcW:'../../static/imgs/xin1w.png',text:'4'},
					{imgsrcB:'../../static/imgs/my1w.png',imgsrcW:'../../static/imgs/my1y.png',text:'5'}],//
				model1Data: null, // 获取通过接口得到的页面的用户视频列表数据
				model2Data: null ,// 获取通过下拉页面得到的数据 + 与原数据合并(model2Data)
				mymsg: null, // 通过接口获取用户粉丝数关注数余额等数据
				
				fy_tw:['贴文','貼文','post','โพสต'],
				url_down:'/userinfo/GetBuyList' // 下拉加载接口 用于下拉到底是关闭接口
			};
				
			},
		
		onLoad:function() {//监听页面加载，其参数为上个页面传递的数据，参数类型为Object
				// var option=JSON.parse(decrypt(decodeURIComponent(obj.action)))
				this.getLoginlanger(); // 获取语言
				this.getLoginMsg(); // 获取用户登录信息
				this.getVideo(); // 初始化页面加载用户关注主播的数据.
				this.getMyMsg(); // 获取用户信息
				this.getCashChange()
				
		},
		onReady:function(){
			this.reSocket()
		},
		onPageScroll(){
			// this.getBottomNewmsg(); // 计算页面是否滚动到底部
		},
		methods:{
			reSocket:function(){//断线重连
				var that = this;
				setTimeout(function(){
					console.log(that)
					// ---先重连---
					uni.getStorage({
						key: 'storage_login_str',
						success: function (res) {
							// console.log(JSON.parse(res.data).logintoken)
							// console.log(JSON.parse(res.data).useridx)
							// -----断线--首次--
							
							var array =JSON.stringify({
								"userName": JSON.stringify(JSON.parse(res.data).useridx),
								"pwd": JSON.parse(res.data).logintoken,
								"devId": systemId(),
								"devType": system(),
								"productType": 3,
								"isRelogin": true,
								"loginWay": 0,
								"language": 0,
								"ver": "1.00",
								"ip":"127.0.0.1"
							})
							// console.log(array)
							var arr = sendD(array);
							// ---------------socket-login---------
							// alert(this.$Socket.isconnect)
							console.log(that)
							console.log(that.$Socket)
							// console.log(111)
							if(that.$Socket.isconnect==false){
								that.$Socket.onReload()
							}
							that.$Socket.nsend(arr)
							// console.log("yijing")
							that.$Socket.eventPatch.onMsg((msg,sk)=>{    //监听是否接受消息
								setTimeout(function() {
								// console.log(msg)
								// console.log(sk)
								 var fileReader = new FileReader();
								     fileReader.onload = function (progressEvent) {
								     	var arrayBuffer = this.result; // arrayBuffer即为blob对应的arrayBuffer
								     	var HeadRecv = new Uint32Array(arrayBuffer, 0, 3);
								     	var strArray = new Uint8Array(arrayBuffer, 12, HeadRecv[0] - 12 - 1);
								     	var str = new TextDecoder().decode(strArray);//{"code":-1,"error":"用户名或密码错误"}
								     	// console.log(HeadRecv[1],JSON.parse(str))
								     	//to do
										// console.log(HeadRecv[1])
										// console.log(JSON.parse(str))
										var msgdata =JSON.parse(str);
										if(HeadRecv[1]==10002){
											console.log("断线重连成功")
											uni.setStorage({
												key: 'storage_login_str',
												data: str,
												success: function () {
													// console.log('success');
												}
											});
										}else if(HeadRecv[1]==10003){
											navigateTo('/pages/startup/startup',null);
											uni.showToast({
												title: msgdata.error,
												duration: 1000,
												icon:"none",
											});
										}
								     	
								     };
								     fileReader.readAsArrayBuffer(msg.data);
									 }, 0); 
							})
							// -----断线--首次--
						}
					});
					// ---先重连---
				},3000)
				
			},
			getLoginlanger:function(){ // 获取当前语言
				var that = this;
				uni.getStorage({
					key: 'storage_login_language',
					success: function (res) {
						that.tabbarLoginLanguage = JSON.parse(res.data);
						// console.log(that.tabbarLoginLanguage);
					}
				});
			},
			getLoginMsg:function(){ // 登录信息
				var that = this;
				uni.getStorage({
					key: 'storage_login_str',
					success: function (res) {
						that.tabbarLoginData = JSON.parse(res.data);
						// console.log(that.tabbarLoginData);
						that.UserIdx = that.tabbarLoginData.useridx;
						if(that.tabbarLoginData.isAnchor==false){
							that.isAnchor = false;
						}
					}
				});
			},
			
			getMyMsg: function(){  // 获取用户信息
				var array=base64ToArrayBuffer(encrypt(JSON.stringify({
						UserIdx: this.UserIdx, // int
					})))
					
					var res = JSON.parse(decrypt(sendData('POST',this.GLOBAL.urlPoint+'/userinfo/GetCatUserInfo',array)));
					// console.log(res);
					if(res.code==100){
						// console.log(res);
						this.mymsg = res.data;
					}
			},
			
			getClickPer:function(e){//tabbar click
				this.tabbarCurrent=e.currentTarget.id;
				// console.log(e.currentTarget.id)
				if(e.currentTarget.id==0){
					// console.log("首页点击")
					// uni.navigateTo({
					// 	// url: '/pages/home/home',
					// });
					navigateTo('/pages/home/home',null);
				}else if(e.currentTarget.id==1){
					// console.log("搜索点击")
					// uni.navigateTo({
					// 	url: '/pages/search/search'
					// });
					navigateTo('/pages/search/search',null);
				}else if(e.currentTarget.id==2){
					// console.log("信息点击")
					// uni.navigateTo({
					// 	url: '/pages/news/news'
					// });
					navigateTo('/pages/news/news',null);
				}else if(e.currentTarget.id==3){
					// console.log("聊天点击")
					// uni.navigateTo({
					// 	url: '/pages/chat/chat'
					// });
					navigateTo('/pages/chat/chat',null);
				}else if(e.currentTarget.id==4){
					console.log(this.isAnchor)
					if(this.isAnchor==false){
						console.log("不是主播")
						// uni.navigateTo({
						// 	url: '/pages/my/my'
						// });
						navigateTo('/pages/my/my',null);
					}else{
						// console.log("是主播")
						// uni.navigateTo({
						// 	url: '/pages/anchorme/anchorme'
						// });
						navigateTo('/pages/anchorme/anchorme',null);
					}
				}
			},
			
			
			// -------------------------获取页面中的用户购买的视频内容---------------------
			getVideo:function(){ // 获取页面中的用户购买的视频内容
				// console.log(decrypt('UVkIwvkixFT3MFiFNKMHspgHjrhUK84gUfsshvWgbFMza3XZ/h9B1ySomcmLQnzebNiTS+D8oTa88Ul0XXfXP02TZIFwKs3wzNKsfhRezHvVgeTzcSf8B6qAOjbrq1C6'))
				// console.log(Number(this.AnchorIdx)); // 主播IDX
				var array=base64ToArrayBuffer(encrypt(JSON.stringify({
						UserIdx: this.UserIdx, // int
						AnchorIdx: 0, // int 主播idx 获取列表时 传0
						Page: this.Page,// int
						Type: this.Type // int
					})))
					
					var res = JSON.parse(decrypt(sendData('POST',this.GLOBAL.urlPoint+'/userinfo/GetBuyList',array)));
					// console.log(res);
					if(res.code==100){
						console.log(res.data);
						this.model1Data = res.data.list;
					}
			},
			// -------------------------获取页面中的用户购买的视频内容---------------------
			
			goVideolist:function(e){ // 跳转到用户购买的主播的视频列表页面
				// uni.navigateTo({
				// 	url: '/pages/unlockvideo/unlockvideo?AnchorName=' + e.MyName + '&AnchorIdx=' + e.AnchorIdx + '&pageId=' + this.pageId
				// });
				var obj = encodeURIComponent(encrypt(JSON.stringify({
					AnchorName:e.MyName,
					AnchorIdx:e.AnchorIdx,
					pageId:this.pageId
				})))
				navigateTo('/pages/unlockvideo/unlockvideo',obj)
			},
			
			goUpdateMsg:function(){ // 编辑资料
				// uni.navigateTo({
				// 	url: '/pages/changeintroduction/changeintroduction'
				// });
				navigateTo('/pages/changeintroduction/changeintroduction',null);
			},
			goProductPage:function(){ // 商品管理页面
				// uni.navigateTo({
				// 	url: '/pages/commoditymanagement/commoditymanagement'
				// });	
				navigateTo('/pages/commoditymanagement/commoditymanagement',null);
			},
			goRecivePage:function(){ // 收益管理页面
				// uni.navigateTo({
				// 	url: '/pages/revenuemanagement/revenuemanagement'
				// });	
				navigateTo('/pages/revenuemanagement/revenuemanagement',null);
			},
			goDatasetPage:function(){ // 个人资料设定页面
				// uni.navigateTo({
				// 	url: '/pages/dataset/dataset'
				// });
				navigateTo('/pages/dataset/dataset',null);
			},
			
			//-------------------------------关注列表页面-----------------------------------------------
			goFollow:function(){
				var obj = encodeURIComponent(encrypt(JSON.stringify({
					pageId:this.pageId
				})))
				navigateTo('/pages/followpopup/followpopup',obj);
			},
			//-------------------------------关注列表页面-----------------------------------------------
			
			//-------------------------------粉丝列表页面-----------------------------------------------
			goFans:function(){
				var obj = encodeURIComponent(encrypt(JSON.stringify({
					pageId:this.pageId
				})))
				navigateTo('/pages/fanspopup/fanspopup',obj);
			},
			//-------------------------------粉丝列表页面-----------------------------------------------
			
			//---------------------------------充值页面---------------------------------------------------
			goPay:function(){
				// uni.navigateTo({
				// 	url: '/pages/paymoney/paymoney'
				// });
				navigateTo('/pages/paymoney/paymoney',null);
			},
			//---------------------------------充值页面---------------------------------------------------
			
			//----------------------------------下滑加载----------------------------------------------
			getNewlist:function(){
				// console.log(111)
				this.Page++;
				var array=base64ToArrayBuffer(encrypt(JSON.stringify({
						UserIdx: this.UserIdx, // int
						AnchorIdx: 0, // int 主播idx 获取列表时 传0
						Page: this.Page,// int
						Type: 0 // int
				})))
				var res = JSON.parse(decrypt(sendData('POST',this.GLOBAL.urlPoint+this.url_down,array)));
				console.log(res);
				if(res.code==100){
					// console.log(res.data);
					// console.log(res.data.list.length);
					if(res.data.list.length == 0){
						this.url_down = '';
					}
					this.model2Data = res.data.list;
					this.model1Data.push.apply(this.model1Data,this.model2Data); // 让两个数组合并
					// console.log(this.model1Data);
				}
			},
			
			getScrollTopMsg:function(event){
				if(event.detail.scrollTop>=100){
					this.show = true;
				}else{
					this.show = false;
				}
				if(event.detail.scrollTop>=210){
					this.show1 = true;
				}else{
					this.show1= false;
				}
			},
			//----------------------------------下滑加载----------------------------------------------
			getCashChange:function(){//刷新币值使用
				var that =this;
				// ----------刷新币值
				// console.log(this.$Socket.isconnect)
				// console.log(this.$Socket)
				if(this.$Socket.isconnect==false){
					this.$Socket.onReload()
				}
				this.$Socket.eventPatch.onMsg((msg,sk)=>{    //监听是否接受消息
					setTimeout(function() {
					// console.log(msg)
					// console.log(sk)
					that.$Socket.eventPatch.events.onMsg = [that.$Socket.eventPatch.events.onMsg[0],that.$Socket.eventPatch.events.onMsg[that.$Socket.eventPatch.events.onMsg.length-1]];
						var fileReader = new FileReader();
					    fileReader.onload = function (progressEvent) {
					     	var arrayBuffer = this.result; // arrayBuffer即为blob对应的arrayBuffer
					     	var HeadRecv = new Uint32Array(arrayBuffer, 0, 3);
					     	var strArray = new Uint8Array(arrayBuffer, 12, HeadRecv[0] - 12 - 1);
					     	var str = new TextDecoder().decode(strArray);//{"code":-1,"error":"用户名或密码错误"}
					     	// console.log(HeadRecv[1],JSON.parse(str))
					     	//to do
							// console.log(HeadRecv[1])
							// console.log(JSON.parse(str))
							var msgdata =JSON.parse(str);
							if(HeadRecv[1]==11006){
								that.tabbarLoginData.cash = msgdata.cash;
								uni.getStorage({
									key: 'storage_login_str',
									success: function (res) {
										// console.log(JSON.parse(res.data))
										// console.log(msgdata)
										var storage_login_str = JSON.parse(res.data);
										storage_login_str.cash=msgdata.cash;
										var str1 =JSON.stringify(storage_login_str)
										// console.log(str)
										uni.setStorage({
											key: 'storage_login_str',
											data: str1,
											success: function () {
												// console.log('success');
											}
										});
									}
								});
							}	
					    };
					    fileReader.readAsArrayBuffer(msg.data);
						}, 0); 
				})
				// ----------刷新币值
			}
		}
	}
</script>

<style lang="scss">
page{
	width: 100%;
	height: 100%;
	background: #232323;;
}
.contentBox{
	width: 100%;
	height: 100%;
	overflow: hidden;
}

.scrollView{
	width: 100%;
	height: 100%;
	
.main{
	width: 100%;
	height: 100%;
	.bottomFix{
		width: 100%;
		height: 90rpx;
	}
	// ---背景
	.top_bj{
		height: 400rpx;
		width: 100%;
		background: #151515;
		// background:url(../../static/pictures/juxing_1.png);
		}
	// ---- 设置部分
	.top{
		height: 150rpx;
		width: 100%;
		position:fixed;
		top: 0;
		left: 0;
		z-index:9999;
		display: flex;
		justify-content: space-between;
		align-items: center;
		.img{
			width: 42rpx;
			height: 40rpx;
			padding: 10rpx;
			margin-left: 25rpx;
			background-image: linear-gradient(rgba(0,0,0,0.5));
			border-radius: 50%;
		}
		.imgArea{
			display: flex;
			justify-content: space-between;
			align-items: center;
			background:rgba(0,0,0,0.5);
			border-radius:6rpx;
			// padding:14rpx 9rpx;
			margin-right:28rpx;
			.size{
				width: 30rpx;
				height: 30rpx;
				margin-right: 13rpx;
				margin-left: 20rpx;
				margin-top:14rpx;
				margin-bottom:14rpx;
				vertical-align: text-bottom;
			}
			.font{
				font-size:26rpx;
				color:rgba(255,214,0,1);
				line-height: 22rpx;
				margin-right: 18rpx;
				margin-top:14rpx;
				margin-bottom:14rpx;
			}
		}
	}
	.move{
		position: fixed;
		top: 0;
		left: 0;
		z-index: 9998;
		display: flex;
		justify-content: center;
		align-items: center;
		width: 100%;
		height: 150rpx;
		background-color:#252525;
		transition: all 5s;
		-webkit-transition: all 5s;	/* Safari 和 Chrome */
		.p{
			color: #FFFFFF;
			font-size: 30rpx;
		}
	}
	.move1{
		position: fixed;
		top: 150rpx;
		left:0;
		z-index: 9998;
		display: flex;
		justify-content: center;
		align-items: center;
		width: 100%;
		height: 50rpx;
		background-color:#343434;
		.p{
			font-size:22rpx;
			color: #FFFFFF;
		}
	}
	// ------- 头像 关注 粉丝部分
	.center,.center1{
		display: flex;
		justify-content: flex-start;
		align-items: flex-start;
		margin-top: -100rpx;
		padding: 0rpx 28rpx 0rpx 28rpx;
		width: 100%;
		height: 100rpx;
		.photo{
			width:160rpx;
			height:160rpx;
			background: #151515;
			border:2px solid rgba(255, 255, 255, 1);
			border-radius:50%;
			margin-right: 23rpx;
		}
		.follow{
			display: flex;
			flex-direction: column;
			align-items:center;
			padding:10rpx;
			margin-top:8rpx;
			margin-left:8rpx;
			.p{
				color: #FFFFFF;
				font-size: 26rpx;
			}
			.p1{
				color: #FFFFFF;
				font-size: 22rpx;
			}
		}
		.edit{
			display: flex;
			justify-content: flex-start;
			align-items: flex-start;
			margin-left:40rpx;
			padding:10rpx;
			padding:11rpx 19rpx;
			border:2px solid rgba(255,255,255,1);
			border-radius:8rpx;
			margin-top:20rpx;
			.img{
				width:29rpx;
				height:29rpx;
				vertical-align: middle;
			}
			.p{
				color: #FFFFFF;
				font-size: 26rpx;
				line-height: 25rpx;
				margin-left: 16rpx;
			}
		}
	}
	.center1{
		background-image: linear-gradient(rgba(35,35,35,0),rgba(35,35,35,1));
		padding-bottom: 5rpx;
	}
	.name{
		max-width:500rpx;
		overflow: hidden;
		text-overflow:ellipsis;
		white-space: nowrap;
		
		background: #232323;
		padding-top:89rpx;
		padding-left:60rpx;
		padding-bottom:35rpx;
		
		font-size:30rpx;
		color: #FFFFFF;
	
	}
	.commodity{
		// width:100%;
		height: 100rpx;
		background: #252525;
		border-top: 1rpx solid #747474;
		padding: 0rpx 37rpx;
		display:flex;
		align-items:center;
		justify-content:space-between;
		.p{
			color: #FFFFFF;
			font-size: 26rpx;
			line-height: 26rpx;
		}
		.img{
			width: 30rpx;
			height: 30rpx;
			padding: 10rpx;
		}
	}
	.profit{
		height: 100rpx;
		background: #252525;
		border-top: 1rpx solid #747474;
		border-bottom: 1rpx solid #747474;
		padding: 0rpx 37rpx;
		display:flex;
		align-items:center;
		justify-content:space-between;
		.p{
			color: #FFFFFF;
			font-size: 26rpx;
			line-height: 26rpx;
		}
		.img{
			width: 30rpx;
			height: 30rpx;
			padding: 10rpx;
		}
	}
	
	.purchased{
		.p{
			display: flex;
			justify-content: center;
			align-items: center;
			width:100%;
			height:50rpx;
			background-color:#343434;
			.p1{
				font-size: 22rpx;
				color: #FFFFFF;
			}
		}
		.list{
			display: flex;
			flex-direction: row;
			flex-wrap: wrap;
			justify-content: flex-start;
			// align-items:center;
			padding: 0rpx 20rpx;
			.pro{
				display: flex;
				flex-direction:column;
				align-items: center;
				justify-content: center;
				.photo{
					width:220rpx;
					height:220rpx;
					background: #343434;
					border-radius:50%;
					margin:28rpx 8rpx 16rpx 8rpx;
				}
				.id{
					display: flex;
					justify-content: center;
					align-items: center;
					height: 22rpx;
					margin-bottom: 11rpx;
					.p1{
						max-width: 220rpx;
						overflow: hidden;
						text-overflow:ellipsis;
						white-space: nowrap;
						color: #FFFFFF;
						font-size: 22rpx;
						line-height: 22rpx;
					}
					.status{
						height: 14rpx;
						width: 14rpx;
						background: #17FF2A;
						border-radius: 50%;
						margin-left: 9rpx;
					}
				}
				.p2{
					max-width: 220rpx;
					overflow: hidden;
					text-overflow:ellipsis;
					white-space: nowrap;
					color:#747474;
					font-size: 22rpx;
					margin-bottom: 11rpx;
				}
			}
		}
	}
		// --tabbar ---
	.tabbarArea{
		height: 90rpx;
		width: 100%;
		position: fixed;
		bottom: 0;
		left: 0;
		z-index: 9999;
		display: flex;
		justify-content: space-around;
		align-items: center;
		background:rgba(25,25,25,1);
		.per{
			width: 54rpx;
			height: 50rpx;
			.img{
				width: 54rpx;
				height: 50rpx;
			}
		}
	}
}
}
</style>
