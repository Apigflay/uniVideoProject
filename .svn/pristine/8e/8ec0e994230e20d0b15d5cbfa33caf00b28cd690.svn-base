<template>
	<scroll-view scroll-y="true" @scrolltolower="getNewmsg" class="main">
		<view class="top">
			<view class="search" @click="goNewsearch()">
				<image class="img" src="../../static/pictures/search_1.png"></image>
			</view>
			<view class="title">
				<text class="p">所有信息</text>
			</view>
			<view class="money" @click="goPay()">
				<image class="img" src="../../static/pictures/lcon_1.png"></image>
				<text class="p">{{this.cash}}</text>
			</view>
		</view>
		<view class="content">
			<view class="list">
				<view class="listPer" v-for="(item,index) in model1Data" :key="index">
					<view class="left" @click="goAnchor(item)">
						<image class="photo" :src="item.SmallPic"></image>
					</view>
					<view class="content" @click="goNewachormelist(item)">
						<view class="center">
							<view class="p1">{{item.MyName}}<view v-if="item.Online" class="spot"></view></view>
							<text class="p2">{{item.Content}}</text>
						</view>
						<view class="right">
							<view class="newmsg">
								<view class="show">
									<view class="status"></view>
									<text class="p1">新帖子</text>
								</view>
							</view>
							<text v-if="item.show_hours" class="p2">剩余{{item.hours}}小时</text>
							<text v-if="item.show_minutes" class="p2">剩余{{item.minutes}}分钟</text>
							<text v-if="item.show_seconds" class="p2">剩余{{item.seconds}}秒</text>
						</view>
					</view>
				</view>
			</view>
		</view>
		<!-- TagBar -->
		<view class="tabbarArea">
			<view class="per" v-for="(item,index) in tabbarData" :key="index" :id="index" @click="getClickPer">
				<image class="img" :src="item.imgsrcW" mode=""></image>
			</view>
		</view>
	</scroll-view>
</template>

<script>
	import {encrypt,decrypt,system,systemId,base64ToArrayBuffer,sendData,sendD,work,regMail,navigateTo} from "../../lib/js/GlobalFunction.js"
	export default {
		data() {
			return {
				pageId: 2, // 页面ID用于页面跳转时候使用  --主播信息列表
				msg: true, // 控制是否是信息系的显示
				model1Data: null, // 获取页面信息的变量
				model2Data: null, // 页面下拉获取更新信息的变量
				useridx: null, // 当前登录账号的用户的IDX
				cash: null, // 当前登录账号的金币余额
				Page: 1, // 当前页面页数 页面下拉加载的时候需要
				// tabbar--
				tabbarLoginData:null,//loginMsg
				isAnchor:null,//是否为主播
				tabbarCurrent:0,//点击的索引
				tabbarData:[{imgsrcB:'../../static/imgs/room1w.png',imgsrcW:'../../static/imgs/fang1w.png',text:'1'},
					{imgsrcB:'../../static/imgs/fang1w.png',imgsrcW:'../../static/imgs/fang1w.png',text:'2'},
					{imgsrcB:'../../static/imgs/mail1w.png',imgsrcW:'../../static/imgs/mail1y.png',text:'3'},
					{imgsrcB:'../../static/imgs/xin1w.png',imgsrcW:'../../static/imgs/xin1w.png',text:'4'},
					{imgsrcB:'../../static/imgs/my1w.png',imgsrcW:'../../static/imgs/my1w.png',text:'5'}],//
			};
		},
		onLoad() {//监听页面加载，其参数为上个页面传递的数据，参数类型为Object
				this.getLoginMsg() // 登录信息
				this.getInitMsg() //页面初始获取到的信息
				this.getTime() // 计算帖子剩余时间
		},
		methods:{
			getLoginMsg:function(){//登录信息
				var that = this;
				uni.getStorage({
					key: 'storage_login_str',
					success: function (res) {
						that.tabbarLoginData = JSON.parse(res.data);
						// console.log(that.tabbarLoginData); // 用户信息
						that.useridx = that.tabbarLoginData.useridx
						that.cash = that.tabbarLoginData.cash
						// console.log(that.cash);
						if(that.tabbarLoginData.isAnchor==false){
							that.isAnchor = false;
						}
					}
				});
			},
			getInitMsg:function(e){ //页面初始化的时候信息加载内容
				var array=base64ToArrayBuffer(encrypt(JSON.stringify({
					UserIdx: this.useridx, // int
					// UserIdx: 10009827 , // int
					Page: this.Page // int
				})))
				var res = JSON.parse(decrypt(sendData('POST',this.GLOBAL.urlPoint+'/userinfo/FansAllInfo',array)));
				// console.log(res);
				if(res.code==100){
					this.model1Data = res.data.list;
				}
			},
			
			getTime:function(){ // 计算帖子剩余时间
				// console.log(this.model1Data[0].ExpireTime)
				// console.log(this.model1Data.length)
				for(var i = 0; i<this.model1Data.length; i++){ // 定义获取到数组的长度 进行循环读取数组中的ExpireTime变量
					// console.log(this.model1Data.length)
					var b = this.model1Data[i].ExpireTime.replace(/T/g, ' ').replace(/\.[\d]{3}Z/, '');
					// var b ="2019-10-17 18:00:00";
					// console.log(b);
					var now = new Date().getTime();
					var time = Date.parse(b);
					var rest = time-now;
					var hours; // 获取小时数
					var minutes; // 获取分钟数
					var seconds; // 获取秒数
					var show_hours = true; // 判断小时时间是否为空
					var show_minutes = false; // 判断分钟时间是否为空
					var show_seconds = false; // 判断秒钟时间是否为空
					if(rest <= 0){
						hours = '00'
						minutes = '00'
						seconds = '00'
					}else{
						hours = Math.floor(rest / (1000 * 60 * 60 ))<10?'0'+ Math.floor(rest / (1000 * 60 * 60 )):Math.floor(rest / (1000 * 60 * 60 ));
						minutes = Math.floor(rest % (1000 * 60 * 60) / (1000 * 60))<10?'0' + Math.floor(rest % (1000 * 60 * 60) / (1000 * 60)):Math.floor(rest % (1000 * 60 * 60) / (1000 * 60));
						seconds = Math.floor((rest % (1000 * 60)) / 1000)<10?'0' + Math.floor((rest % (1000 * 60)) / 1000):Math.floor((rest % (1000 * 60)) / 1000);
						// console.log(hours);
					}
					this.model1Data[i]['hours'] = hours; // 将获取到的时间的数据存入对象数组中
					this.model1Data[i]['minutes'] = minutes; 
					this.model1Data[i]['seconds'] = seconds;
					// this.model1Data[i]['msg'] = true; // 将数据是否为新数据的标记放入对象中
					// console.log(this.model1Data[i]);
					// this.minutes.push(hours); // push 只能把数据存入数组
					// console.log(this.model1Data)
					if(hours == '00'){
						show_hours = false;
						show_minutes = true;
					}else if(minutes == '00'){
						show_minutes = false;
						show_seconds = true;
						console.log(show_minutes)
					}else{
						// console.log('111')
					}
					this.model1Data[i]['show_hours'] = show_hours;
					this.model1Data[i]['show_minutes'] = show_minutes;
					this.model1Data[i]['show_seconds'] = show_seconds;
				}
				// console.log(this.model1Data) // 给获取到的数据标中加入新的数据后的数据表
				
			},
			
			getNewmsg:function(){ // 页面触底时触发的事件
				this.Page = this.Page+1;
				var array=base64ToArrayBuffer(encrypt(JSON.stringify({
					UserIdx: this.useridx, // int
					Page: this.Page // int
				})))
				var res = JSON.parse(decrypt(sendData('POST',this.GLOBAL.urlPoint+'/userinfo/FansAllInfo',array)));
				if(res.code==100){
					this.model2Data = res.data.list;
				}
				this.model1Data.push.apply(this.model1Data,this.model2Data);
				// console.log(this.Page);
				// console.log(this.model1Data);
				
				// ---------- 测试滑动加载代码
				// var a = [1,2,3];
				// var b = [4,5,6];
				// a.push.apply(a,b);
				// console.log(a);
				// ---------- 测试滑动加载代码
				
				this.getTime();
			},
			
			goAnchor:function(e){
				// console.log(e)
				// uni.navigateTo({
				// 	url: "/pages/anchorpersonal/anchorpersonal?pageId="+ 2 + "&AnchorIdx=" + e.UserIdx + "&Type=" + 2
				// }); 
				var obj = encodeURIComponent(encrypt(JSON.stringify({
					pageId:2,
					AnchorIdx:e.UserIdx,
					Type:2
				})))
				navigateTo('/pages/anchorpersonal/anchorpersonal',obj)
			},
			
			goPay:function(){
				// uni.navigateTo({
				// 	url: "/pages/paymoney/paymoney"
				// }); 
				navigateTo('/pages/paymoney/paymoney',null);
			},
			
			golist:function(e){ // 判断列表是否被点击过
				// e.msg = false;
				console.log(e)
				// this.model1Data[e].msg = false;
				// console.log(this.model1Data[e].msg)
			},
			goNewsearch:function(){
				// uni.navigateTo({
				// 	url: "/pages/newsearch/newsearch"
				// }); 
				navigateTo('/pages/newsearch/newsearch',null);
			},
			goNewachormelist:function(e){ // 页面
				// console.log(e);
				// uni.navigateTo({
				// 	url: "/pages/newachormelist/newachormelist?pageId=" + this.pageId + "&AnchorIdx=" + e.UserIdx + "&MyName=" + e.MyName
				// }); 
				var obj = encodeURIComponent(encrypt(JSON.stringify({
					pageId:this.pageId,
					AnchorIdx:e.UserIdx,
					MyName:e.MyName
				})))
				navigateTo('/pages/newachormelist/newachormelist',obj);
				
			},
			getClickPer:function(e){//tabbar click
				console.log(this.isAnchor)
				this.tabbarCurrent=e.currentTarget.id;
				console.log(e.currentTarget.id)
				if(e.currentTarget.id==0){
					// console.log("首页点击")
					// uni.navigateTo({
					// 	url: '/pages/home/home'
					// });
					navigateTo('/pages/home/home',null);
				}else if(e.currentTarget.id==1){
					// console.log("搜索点击")
					// uni.navigateTo({
					// 	url: '/pages/search/search'
					// });
					navigateTo('/pages/search/search',null);
				}else if(e.currentTarget.id==2){
					// console.log("信息点击")
					// uni.navigateTo({
					// 	url: '/pages/news/news'
					// });
					navigateTo('/pages/news/news',null);
				}else if(e.currentTarget.id==3){
					// console.log("聊天点击")
					// uni.navigateTo({
					// 	url: '/pages/chat/chat'
					// });
					navigateTo('/pages/chat/chat',null);
				}else if(e.currentTarget.id==4){
					console.log(this.isAnchor)
					if(this.isAnchor==false){
						console.log("不是主播")
						// uni.navigateTo({
						// 	url: '/pages/my/my'
						// });
						navigateTo('/pages/my/my',null);
					}else{
						console.log("是主播")
						// uni.navigateTo({
						// 	url: '/pages/anchorme/anchorme'
						// });
						navigateTo('/pages/anchorme/anchorme',null);
					}
				}	
			},
		}
	}
</script>

<style lang="scss">
page{
	width: 100%;
	height: 100%;
	background: #191919;
}
.main{
	width:100%;
	height: 100%;
	background: #191919;
	.top{ // 页面搜索题目
		position: fixed;
		top: 0rpx;
		left:0rpx;
		right: 0rpx;
		z-index: 9999;
		background: #3B3B3B;
		display:flex;
		justify-content:space-between;
		align-items:center;
		height:100rpx;
		.search{
			width:40rpx;
			height: 40rpx;
			margin-left:18rpx;
			padding:10rpx;
			.img{
				width:40rpx;
				height:40rpx;
			}
		}
		.title{
			position: absolute;
			left: 40%;
			color: #FFFFFF;
			font-size: 30rpx;
			font-weight:400;
		}
		.money{
			margin-right:28rpx;
			// width:110rpx;
			height:50rpx;
			background:rgba(0,0,0,0.5);
			border-radius:6px;
			display:flex;
			justify-content:center;
			align-items:center;
			.img{
				width: 30rpx;
				height: 22rpx;
				margin-right: 13rpx;
				margin-left: 20rpx;
				margin-top:14rpx;
				margin-bottom:14rpx;
				vertical-align: text-bottom;
			}
			.p{
				font-size: 26rpx;
				color: #FFD600;
				font-weight:500;
				line-height: 22rpx;
				margin-right: 18rpx;
				margin-top:14rpx;
				margin-bottom:14rpx;
				
			}
		}
	}
	.content{ // 页面列表
		.list{
			padding-left:28rpx;
			padding-top:100rpx;
			padding-bottom:90rpx;
			.listPer{
				height: 113rpx;
				display:flex;
				.left{ // 头像
					padding: 12rpx 0rpx 11rpx 0rpx;
					height: 90rpx;
					width: 90rpx;
					.photo{ // 头像
						background: #646464;
						height: 90rpx;
						width: 90rpx;
						border-radius: 50%;
					}
				}
				.content{
					width:100%;
					height:113rpx;
					border-bottom: 2px solid #343434;
					margin-left:39rpx;
					margin-right:28rpx;
					display:flex;
					align-items:center;
					justify-content:space-between;
					.center{ // 内容
						display: flex;
						flex-direction:column;
						justify-content:center;
						
						max-width: 500rpx;
						overflow: hidden;
						text-overflow:ellipsis;
						white-space: nowrap;
						color:#FFFFFF;
						.p1{
							font-size: 26rpx;
							font-weight:500;
							color: #FFFFFF;
							max-width: 350rpx;
							overflow: hidden;
							text-overflow:ellipsis;
							white-space: nowrap;
							.spot{
								display: inline-block;
								vertical-align: middle;
								margin-left: 11rpx;
								height: 12rpx;
								width: 12rpx;
								background: #00FF2A;
								border-radius: 50%;
							}
						}
						.p2{
							font-size: 22rpx;
							font-weight:400;
							margin-top:9rpx;
							color:#ACACAC;
							max-width: 390rpx;
							overflow: hidden;
							text-overflow:ellipsis;
							white-space: nowrap;
						}
					}
					.right{
						display:flex;
						flex-direction:column;
						align-items:flex-end;
						.newmsg{
							height:20rpx;
							margin-bottom:14rpx;
							.show{
								display:flex;
								justify-content:center;
								align-items:center;
								.status{
									height: 6rpx;
									width: 6rpx;
									background: #00D8FF;
									border-radius: 50%;
									margin-right: 7rpx;
								}
								.p1{
									color: #00D8FF;
									font-size: 20rpx;
									font-weight:400;
								}
							}
						}
						.p2{
							color: #ACACAC;
							font-size: 20rpx;
							font-weight:400;
						}
					}
				}
			}
		}
	}
		// --tabbar ---
	.tabbarArea{
		height: 90rpx;
		width: 100%;
		position: fixed;
		bottom: 0;
		left: 0;
		z-index: 9999;
		display: flex;
		justify-content: space-around;
		align-items: center;
		background:rgba(25,25,25,1);
		.per{
			width: 54rpx;
			height: 50rpx;
			.img{
				width: 54rpx;
				height: 50rpx;
			}
		}
	}
}
</style>
