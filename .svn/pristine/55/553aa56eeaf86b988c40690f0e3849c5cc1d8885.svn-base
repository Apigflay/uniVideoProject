<template>
	<view class="main">
		<!-- top 背景 -->
		<image :src="model1Data.Anchor.BackgroundUrl" class="top_bj"></image>
		<!-- top 背景 -->
		
		<!-- top -->
		<view class="top">
			<image class="img" src="../../static/pictures/houtui_1.png" @click="goBack()"></image>
			<image class="size" src="../../static/pictures/gengduo1_1.png" @click="openmask()"></image>
		</view>
		<!-- top -->
		
		<!-- top 上推 出现层 -->
		<view v-if="top_show" class="move">
			<text class="p">{{model1Data.Anchor.MyName}}</text>
		</view>
		<view v-if="top_show1" class="move1">
			<text class="p">影片群发</text>
		</view>
		<!-- top 上推 出现层 -->
		
		<!--  影片数量-->
		<view class="cont">
			<text class="p1">{{model1Data.Anchor.Cont}}</text>
			<text class="p2">群发影片</text>
		</view>
		<!-- 影片数量 -->
		<!-- 头像 关注 -->
		<view class="head">
			<image class="photo" :src="model1Data.Anchor.SmallPic"></image>
			<view class="box" :style="model1Data.Anchor.Fans==1?'background:#808080':''" @click="follow()">
				<text v-if="model1Data.Anchor.Fans" class="p1">关注中</text>
				<text v-else class="p">关注</text>
			</view>
		</view>
		<!-- 头像 关注 -->
		<!-- 用户名 国籍 -->
		<view class="name">
			<text class="p">{{model1Data.Anchor.MyName}}</text>
			<image class="img" src="../../static/pictures/en_1.png"></image>
		</view>
		<!-- 用户名 国籍 -->
		<!-- 在线或离线 -->
		<view v-if="model1Data.Anchor.Online" class="line">
			<image class="img" src="../../static/pictures/tuoyuan_1.png"></image>
			<text class="p">在线</text>
		</view>
		<view v-else class="noline">
			<view class="img"></view>
			<text class="p">{{model1Data.Anchor.Lasttime}}</text>
		</view>
		<!-- 在线或离线 -->
		
		<!-- 个人标签 -->
		<view class="label">
			<view class="box" v-for="(item,index) in model1Data.RecommendList" :key="index" :id="index" v-if="item.Type">
				<image class="img" :style="'background:#89CC25'" :src="item.ImgUrl"></image>
				<text class="p">{{item.Name}} No.{{item.RankNumber}}</text>
			</view>
		</view>
		<!-- 个人标签 -->
		
		<!-- 个人介绍 -->
		<view class="introduce">
			<view class="box">
				<text class="p">{{model1Data.Anchor.Signatures}}</text>
			</view>
		</view>
		<!-- 个人介绍 -->
		
		<!-- purchased  影片群发 -->
		<view class="purchased ">
			<view class="move_p">
				<text class="p1">影片群发</text>
			</view>
			<view class="list">
				<view class="listPer" v-for="(item,index) in model2Data" :key="index" @click="goVideo(item)">
					<view class="left">
						<image class="photo" :src="item.BackgroundPicUrl"></image>
					</view>
					<view class="content">
						<view class="center">
							<text class="p">{{item.Content}}</text>
						</view>
						<view class="bottom">
							<view class="b_left">
								<image class="img" src="../../static/pictures/bofang_1.png"></image>
								<text v-if="item.show_hours" class="p">剩余{{item.hours}}小时</text>
								<text v-if="item.show_minutes" class="p">剩余{{item.minutes}}分钟</text>
								<text v-if="item.show_seconds" class="p">剩余{{item.seconds}}秒</text>
								<image class="img" src="../../static/pictures/unlock_1.png"></image>
								<text class="p">{{item.UnLockCount}}</text>
								<image class="img" src="../../static/pictures/fabulous_1.png"></image>
								<text class="p">{{item.GoodEvaluate}}</text>
							</view>
							<view class="b_right">
								<image class="img" src="../../static/pictures/zuanshi_1.png"></image>
								<text class="p">{{item.UnLockMoney}}</text>
							</view>
						</view>
					</view>
				</view>
			</view>
		</view>
		<!-- purchased  -->
		
		<!-- 功能 -->
		<view class="function">
			<view class="gift" @click="goGift()">
				<image class="img" src="../../static/pictures/liwu_1.png"></image>
				<text class="p">送礼</text>
			</view>
			<view class="center_line"></view>
			<view class="gift" @click="goChat()">
				<image class="img" src="../../static/pictures/chat1_1.png"></image>
				<text class="p">聊天</text>
			</view>
		</view>
		<!-- 功能 -->
		
		<!-- 拉黑 弹出层 -->
		<view class="mask" v-if="switch_mask">
			<view class="popup" v-if="switch_mask">
				<text class="button" @click="hate()" v-if="dislike">拉黑</text>
				<text class="button" @click="hate()" v-else>解除</text>
				<text class="button" @click="closemask()">取消</text>
			</view>
		</view>
		<!-- 拉黑 弹出层 -->
	</view>
</template>

<script>
	import {encrypt,decrypt,system,systemId,base64ToArrayBuffer,sendData,sendD,work,sendD07,sendD09} from "../../lib/js/GlobalFunction.js"
	export default {
		data() {
			return {
				//------页面连接时候传递的参数-------------------------------
				UserIdx: null, //页面加载时获取到的用户IDX
				AnchorIdx: null, // 页面加载时获取到的主播IDC
				Page: 1, // 页数 连接接口时候需要传递的参数
				Type: 2, // 连接视频列表的接口类型
				//----------------------------------------------------------
				pageId: null, // 页面回退时候需要的id
				anchorId: 4, // 当前页面ID
				searchname: null, // 搜索标签页面回退时需要的名字
				searchCount: null, // 搜索标签页面回退时需要的总数
				
				page: 4, // 页面id 用于其他页面向本页面跳转的时候使用
				model1Data: null, // 获取通过接口得到的页面的用户数据
				model2Data: null, // 获取通过接口得到的页面的用户视频列表数据
				model3Data: null, // 获取通过下拉页面得到的数据 + 与原数据合并(model2Data)
				top_show: false, // 控制页面top部分背景色
				top_show1: false, // 控制页面top部分背景色
				
				switch_mask: false, //--------------------------遮罩层开关------------------------
				dislike: true, // --------------------------拉黑功能绑定的数据---------------------
			};
		},
		onLoad: function (option) { //option为object类型，会序列化上个页面传递的参数
			// console.log(option); //打印出上个页面传递的参数。
			// this.UserIdx = option.UserIdx; // 用户IDX
			this.AnchorIdx = option.AnchorIdx; // 主播IDX
			this.pageId = option.pageId; // 页面ID 用于回退页面的时候使用
			this.Type = option.Type //类型
			this.searchname = option.searchname
			this.searchCount = option.searchCount
			// console.log(this.AnchorIdx);
			// console.log(this.pageId);
			// console.log(this.Type);
			this.getLoginMsg(); //页面初始化加载的数据
			this.getInitMsg(); // 获取搜索页面的数据
			this.getInitVideo(); // 页面初始化加载的主播视频列表数据
			this.getTime(); // 计算帖子剩余时间
			
			
		},
		
		onPageScroll(){ // 计算页面滚动
			if(document.documentElement.scrollTop>=100){
				this.top_show = true;
			}else{
				this.top_show= false
			}
			if(document.documentElement.scrollTop>=275){
				this.top_show1 = true;
			}else{
				this.top_show1= false
			}
			this.getBottomNewmsg(); // 计算页面是否滚动到底部
		},
		
		methods:{
			getLoginMsg:function(){//登录信息
				var that = this;
				uni.getStorage({
					key: 'storage_login_str',
					success: function (res) {
						that.tabbarLoginData = JSON.parse(res.data);
						// console.log(that.tabbarLoginData.useridx);
						that.loginMsgData = that.tabbarLoginData
						that.UserIdx = that.tabbarLoginData.useridx;
						if(that.tabbarLoginData.isAnchor==false){
							that.isAnchor = false;
						}
					}
				});
			},
			
			getInitMsg:function(e){ //页面初始化加载的数据
				var array=base64ToArrayBuffer(encrypt(JSON.stringify({
					UserIdx: this.UserIdx, // int
					AnchorIdx: this.AnchorIdx // int
				})))
				var res = JSON.parse(decrypt(sendData('POST',this.GLOBAL.urlPoint+'/userinfo/GetAnchorInfo',array)));
				if(res.code==100){
					this.model1Data=res.data;
					console.log(this.model1Data)
				}
			},
			
			getInitVideo:function(){ //页面初始化加载的视频列表数据
				// console.log(this.UserIdx); // 用户IDX
				// console.log(Number(this.AnchorIdx)); // 主播IDX
				var array=base64ToArrayBuffer(encrypt(JSON.stringify({
						UserIdx: Number(this.AnchorIdx), // int
						Page: this.Page,// int
						Limit: 10,
						Type: this.Type
					})))
					var res = JSON.parse(decrypt(sendData('POST',this.GLOBAL.urlPoint+'/userinfo/GetResourceList',array)));
					if(res.code==100){
						this.model2Data=res.data.list;
						// console.log(this.model2Data);
					}
			},
						
			getTime:function(){ // 计算帖子剩余时间
				// console.log(this.model1Data[0].ExpireTime)
				// console.log(this.model1Data.length)
				for(var i = 0; i<this.model2Data.length; i++){ //定义获取到数组的长度 进行循环读取数组中的ExpireTime变量
					// console.log(this.model1Data.length);
					var b = this.model2Data[i].ExpireTime.replace(/T/g, ' ').replace(/\.[\d]{3}Z/, '');
					// var b ="2019-10-17 18:00:00";
					// console.log(b);
					var now = new Date().getTime();
					var time = Date.parse(b);
					var rest = time-now;
					var hours; // 获取小时数
					var minutes; // 获取分钟数
					var seconds; // 获取秒数
					var show_hours = true; // 判断小时时间是否为空
					var show_minutes = false; // 判断分钟时间是否为空
					var show_seconds = false; // 判断秒钟时间是否为空
					
					if(rest <= 0){
						hours = '00'
						minutes = '00'
						seconds = '00'
					}else{
						hours = Math.floor(rest / (1000 * 60 * 60 ))<10?'0'+ Math.floor(rest / (1000 * 60 * 60 )):Math.floor(rest / (1000 * 60 * 60 ));
						minutes = Math.floor(rest % (1000 * 60 * 60) / (1000 * 60))<10?'0' + Math.floor(rest % (1000 * 60 * 60) / (1000 * 60)):Math.floor(rest % (1000 * 60 * 60) / (1000 * 60));
						seconds = Math.floor((rest % (1000 * 60)) / 1000)<10?'0' + Math.floor((rest % (1000 * 60)) / 1000):Math.floor((rest % (1000 * 60)) / 1000);
						// console.log(hours);
					}
					this.model2Data[i]['hours'] = hours; // 将获取到的时间的数据存入对象数组中
					this.model2Data[i]['minutes'] = minutes;
					this.model2Data[i]['seconds'] = seconds;
					// console.log(this.model1Data[i]);
					// this.minutes.push(hours); // push 只能把数据存入数组
					if(hours == '00'){
						show_hours = false;
						show_minutes = true;
					}else if(minutes == '00'){
						show_minutes = false;
						show_seconds = true;
						// console.log(this.show_minutes)
					}else{
						// console.log('111')
					}
					this.model2Data[i]['show_hours'] = show_hours;
					this.model2Data[i]['show_minutes'] = show_minutes;
					this.model2Data[i]['show_seconds'] = show_seconds;
				}
				// console.log(this.model2Data);
			},
			
			goVideo:function(e){ // 跳转视频播放页面
				console.log(e)
				uni.navigateTo({
					url: "/pages/video/video?AnchorIdx=" + e.UserIdx + "&ResourceoId=" + e.ResourcesId + "&pageId=" + this.pageId + "&anchorId=" + this.anchorId
				})
			},
			
			//-----------------------------------页面下滑功能----------------------------------
			getBottomNewmsg:function(){ // 页面下滑功能
				//--------------
				var that = this
				window.onscroll = function(){  // 由于需要使用 onPageScroll 无法使用 scroll-view 所以使用onscroll来判断页面是否滚动到底部
				    //变量scrollTop是滚动条滚动时，距离顶部的距离
				    var scrollTop = document.documentElement.scrollTop;
				    //变量windowHeight是可视区的高度
				    var windowHeight = document.documentElement.clientHeight;
				    //变量scrollHeight是滚动条的总高度
				    var scrollHeight = document.documentElement.scrollHeight;
				           //滚动条到底部的条件
						   // console.log(this.GLOBAL);
						if(scrollTop+windowHeight==scrollHeight){
							//写后台加载数据的函数
							// console.log("距顶部"+scrollTop+"可视区高度"+windowHeight+"滚动条总高度"+scrollHeight);
							// console.log(that.GLOBAL.urlPoint);
							that.Page++;
							// console.log(that.UserIdx); // 用户IDX
							// console.log(Number(that.AnchorIdx)); // 主播IDX
							// console.log(that.Page);
							var array=base64ToArrayBuffer(encrypt(JSON.stringify({
									UserIdx: Number(that.AnchorIdx), // int
									Page: that.Page,// int
									Limit: 10, // int
									Type: that.Type // int
								})))
								var res = JSON.parse(decrypt(sendData('POST',that.GLOBAL.urlPoint+'/userinfo/GetResourceList',array)));
								if(res.code==100){
									that.model3Data=res.data.list;
									// console.log(that.model3Data);
								}
								// that.model3Data = [1,2,3];
								that.model2Data.push.apply(that.model2Data,that.model3Data);
								console.log(that.model2Data);
						}   
				    }
				//-----------------
			},
			//-----------------------------------页面下滑功能----------------------------------
			goBack:function(){ // 返回上一页
				if(this.pageId == 0){
					uni.navigateTo({
						url: '/pages/search/search'
					})
				}else if(this.pageId == 8){
					// uni.navigateTo({
					// 	url: "/pages/video/video?AnchorIdx=" + e.UserIdx + "&ResourceoId=" + e.ResourcesId + "&pageId=" + 4
					// })
					uni.navigateBack({
					    delta: 1
					});
				}else if(this.pageId == 5){
					uni.navigateTo({
						url: '/pages/tagsearch/tagsearch?searchname=' + this.searchname + '&searchCount=' + this.searchCount
					})
				}else if(this.pageId == 2){
					uni.navigateTo({
						url: '/pages/news/news'
					})
				}else if(this.pageId == 111){
					uni.navigateTo({
						url: '/pages/home/home'
					})
				}else if(this.pageId == 9){
					uni.navigateBack({
					    delta: 1
					});
				}else if(this.pageId == 112){
					uni.navigateBack({
					    delta: 1
					});
				}else if(this.pageId == 11){
					uni.navigateTo({
						url: '/pages/followpopup/followpopup'
					})
				}else if(this.pageId == 12){
					uni.navigateTo({
						url: '/pages/fanspopup/fanspopup'
					})
				}else if(this.pageId == 13){
					uni.navigateTo({
						url: '/pages/chat/chat'
					})
				}
			},
			
			goGift:function(){
				console.log(this.AnchorIdx);
				// uni.navigateTo({
				// 	// 给聊天页面传递的参数
				// 	url: '/pages/chatpop/chatpop?useridx=' + this.model1Data.Anchor.UserIdx + '&nickname=' + this.model1Data.Anchor.MyName + '&headpic=' + this.model1Data.Anchor.SmallPic + '&online=' + this.model1Data.Anchor.Online
				// })
			},
			
			goChat:function(){
				console.log(this.AnchorIdx);
				uni.navigateTo({
					// 给聊天页面传递的参数
					url: '/pages/chatpop/chatpop?useridx=' + this.model1Data.Anchor.UserIdx + '&nickname=' + this.model1Data.Anchor.MyName + '&headpic=' + this.model1Data.Anchor.SmallPic + '&online=' + this.model1Data.Anchor.Online
				})
			},
			
			//-------------------------关注功能---10010chongxindenglu----------------------------------
			follow:function(){//保存资料   //ws://192.168.1.104:17400
					// // console.log(this.loginMsgData.isAnchor)
					// // console.log(this.loginMsgData.useridx)
					// ----------------------按钮样式变化----------------------
					var show
					if(this.model1Data.Anchor.Fans == 0){
						show = true;
					}else if(this.model1Data.Anchor.Fans == 1){
						show = false;
					}
					// ----------------------按钮样式变化----------------------
					var array =JSON.stringify({
						// "useridx": this.loginMsgData.useridx,
						// "signature": this.textArea,
						"useridx": Number(this.loginMsgData.useridx),
						"toidx": Number(this.AnchorIdx),
						"status": show
					})
					// console.log(array) //{"useridx":10009829,"toidx":"11000000","status":false}
					var arr = sendD07(array);
					console.log(arr) // send07 加密后的 array数据
					// alert(this.$Socket.isconnect)
					// console.log(this.$Socket)
					if(this.$Socket.isconnect==false){
						this.$Socket.onReload()
					}
					this.$Socket.nsend(arr)  //放射一个数据到服务器
					this.$Socket.eventPatch.onMsg((msg,sk)=>{    //监听是否接受消息
						// console.log(msg)
						// console.log(sk)
						     var fileReader = new FileReader();
							 var that = this
						     fileReader.onload = function (progressEvent) {
						     	var arrayBuffer = this.result; // arrayBuffer即为blob对应的arrayBuffer
						     	var HeadRecv = new Uint32Array(arrayBuffer, 0, 3);
						     	var strArray = new Uint8Array(arrayBuffer, 12, HeadRecv[0] - 12 - 1);
						     	var str = new TextDecoder().decode(strArray);//{"code":-1,"error":"用户名或密码错误"}
						     	// console.log(HeadRecv[1],JSON.parse(str))
						     	//to do
								// if(HeadRecv[1]==10002){
								// 	uni.navigateTo({
								// 		url: '/pages/home/home'
								// 	});
								if(HeadRecv[1]==10010){
									uni.navigateTo({
										url: '/pages/startup/startup'
								});
								// 	uni.setStorage({
								// 		key: 'storage_login_str',
								// 		data: str,
								// 		success: function () {
								// 			console.log('success');
								// 		}
								// 	});
								}else if(HeadRecv[1]==11008){
									console.log(that.model1Data.Anchor.Fans)
									if(that.model1Data.Anchor.Fans == 0){
										that.model1Data.Anchor.Fans = 1;
									}else if(that.model1Data.Anchor.Fans == 1){
										that.model1Data.Anchor.Fans = 0;
									}
									
									uni.showToast({
										title: '成功',
										duration: 1500
									});
								}else{
									uni.showToast({
										title: '标题',
										duration: 1500
									});
								}
						     	console.log(HeadRecv[1])
						     	console.log(JSON.parse(str))
						     };
						     fileReader.readAsArrayBuffer(msg.data);
					});
					// ---------------------------------------------------------------------------
			},
			//-------------------------关注功能--------------------------------------------------------
			
			//-------------------------拉黑功能--------------------------------------------------------
			openmask: function(){ // 打开弹框
				this.switch_mask = true;
			},
			closemask: function(){ // 关闭弹框
				this.switch_mask = false;
			},
			hate: function(){ // 拉黑按钮
				this.switch_mask = false;
				var array =JSON.stringify({
					// "useridx": this.loginMsgData.useridx,
					// "signature": this.textArea,
					"useridx": Number(this.UserIdx),
					"toidx": Number(this.AnchorIdx),
					"status": this.dislike
				})
				console.log({
					"useridx": Number(this.UserIdx),
					"toidx": Number(this.AnchorIdx),
					"status": this.dislike
				})
				// console.log(array) //{"useridx":10009829,"toidx":"11000000","status":false}
				var arr = sendD09(array);
				console.log(arr) // send07 加密后的 array数据
				alert(this.$Socket.isconnect)
				// console.log(this.$Socket)
				if(this.$Socket.isconnect==false){
					this.$Socket.onReload()
				}
				this.$Socket.nsend(arr)  //放射一个数据到服务器
				this.$Socket.eventPatch.onMsg((msg,sk)=>{    //监听是否接受消息
					// console.log(msg)
					// console.log(sk)
						 var fileReader = new FileReader();
						 fileReader.onload = function (progressEvent) {
							var arrayBuffer = this.result; // arrayBuffer即为blob对应的arrayBuffer
							var HeadRecv = new Uint32Array(arrayBuffer, 0, 3);
							var strArray = new Uint8Array(arrayBuffer, 12, HeadRecv[0] - 12 - 1);
							var str = new TextDecoder().decode(strArray);//{"code":-1,"error":"用户名或密码错误"}
							if(HeadRecv[1]==10010){
								console.log(111)
								uni.navigateTo({
									url: '/pages/startup/startup'
							});
							}else if(HeadRecv[1]==11010){
								console.log(HeadRecv[1])
								uni.showToast({
									title: '标题',
									duration: 1500
								});
							}
							// console.log(HeadRecv[1])
							// console.log(JSON.parse(str))
						 };
						 fileReader.readAsArrayBuffer(msg.data);
				});
				// 仅限于用户没有退出页面的情况下 动态调整 拉黑与解除
				if(this.dislike == true){
					this.dislike = false; 
				}else{
					this.dislike = true;
				}
			
			},
			//-------------------------拉黑功能--------------------------------------------------------
			
			//-------------------------拉黑功能--------------------------------------------------------
			
			//-------------------------拉黑功能--------------------------------------------------------
		}
	}
</script>

<style lang="scss">
page{
	width: 100%;
	height: 100%;
	background: #232323;
}
.main{
	width: 100%;
	height: 100%;
	position:absolute;
	// ---背景
	.top_bj{
		height: 400rpx;
		width: 100%;
		// background:url(../../static/pictures/juxing_1.png);
	}
	// ---- 设置部分
	.top{
		height: 150rpx;
		width: 100%;
		position:fixed;
		top: 0;
		left: 0;
		z-index:9999;
		display: flex;
		justify-content: space-between;
		align-items: center;
		.img{
			width: 36rpx;
			height: 36rpx;
			padding: 10rpx;
			margin-left: 19rpx;
		}
		.size{
			width: 36rpx;
			height: 36rpx;
			padding: 10rpx;
			margin-right: 19rpx;
		}
	}
	.move{
		position: fixed;
		top: 0;
		left: 0;
		z-index: 9998;
		display: flex;
		justify-content: center;
		align-items: center;
		width: 100%;
		height: 150rpx;
		background-color:#252525;
		transition: all 5s;
		-webkit-transition: all 5s;	/* Safari 和 Chrome */
		.p{
			color: #FFFFFF;
			font-size: 30rpx;
		}
	}
	.move1{
		position: fixed;
		top: 150rpx;
		left:0;
		z-index: 9998;
		display: flex;
		justify-content: center;
		align-items: center;
		width: 100%;
		height: 50rpx;
		background-color:#343434;
		.p{
			font-size:22rpx;
			color: #FFFFFF;
		}
	}
	
	
	.cont{
		position:absolute;
		top:320rpx;
		left:250rpx;
		display:flex;
		flex-direction: column;
		align-items:center;
		.p1{
			font-size: 35rpx;
			color: #FFFFFF;
			line-height: 35rpx;
			margin-bottom: 10rpx;
		}
		.p2{
			font-size: 26rpx;
			color: #FFFFFF;
			line-height: 26rpx;
		}
	}
	.head{
		width: 694rpx;
		display: flex;
		justify-content: flex-start;
		align-items: flex-end;
		margin-top: -40rpx;
		padding: 0rpx 28rpx 0rpx 28rpx;
		width: 100%;
		height: 100rpx;
		.photo{
			width:160rpx;
			height:160rpx;
			background: #151515;
			border:2px solid rgba(255, 255, 255, 1);
			border-radius:50%;
			margin-right: 44rpx;
		}
		.box{
			display: flex;
			justify-content: center;
			align-items: center;
			width:490rpx;
			height:40rpx;
			background:#FFD600;
			border-radius:8rpx;
			.p{
				color: #FFFFFF;
				font-size:26rpx;
				line-height: 26rpx;
			}
			.p1{
				color: #C8C7CC;
				font-size:26rpx;
				line-height: 26rpx;
			}
		}
	}
	.name{
		display: flex;
		justify-content: flex-start;
		align-items: center;
		margin-top: 18rpx;
		padding: 0rpx 29rpx;
		.p{
			max-width: 300rpx; // 做单行显示限制
			overflow: hidden;
			text-overflow:ellipsis;
			white-space: nowrap; // 做单行显示限制
			padding-left: 30rpx;
			color: #FFFFFF;
			font-size: 26rpx;
			line-height: 26rpx;
		}
		.img{
			width: 25rpx;
			height: 25rpx;
			margin-left: 7rpx;
		}
	}
	.line{
		width: 692rpx;
		display: flex;
		align-items: center;
		padding: 0rpx 29rpx;
		margin-top:20rpx;
		padding-left: 30rpx;
		.img{
			width: 20rpx;
			height: 20rpx;
			margin-right: 12rpx;
		}
		.p{
			color: #00FF2A;
			font-size: 22rpx;
			line-height: 22rpx;
		}
	}
	.noline{
		width: 692rpx;
		display: flex;
		align-items: center;
		padding: 0rpx 29rpx;
		margin-top:20rpx;
		padding-left: 30rpx;
		.img{
			width: 16rpx;
			height: 16rpx;
			border-radius: 50%;
			background: #808080;
			margin-right: 12rpx;
		}
		.p{
			color: #808080;
			font-size: 22rpx;
			line-height: 22rpx;
		}
	}
	.label{
		width: 694rpx;
		padding: 35rpx 20rpx 0rpx 28rpx;
		display:flex;
		flex-wrap:wrap;
		.box{
			background:#FFFFFF;
			border-radius:17rpx;
			line-height: 34rpx;
			margin-right: 8rpx;
			margin-bottom: 16rpx;
			display:flex;
			align-items:center;
			.img{
				// position: relative;
				width: 37rpx;
				height: 37rpx;
				border:2rpx solid rgba(255,255,255,1);
				border-radius:50%;
			}
			.p{
				color: #747474;
				font-size: 22rpx;
				margin-left: 4rpx;
				margin-right: 12rpx;
				line-height: 22rpx;
			}
		}
	}
	.introduce{
		width: 692rpx;
		padding: 27rpx 29rpx;
		.box{
			.p{
				// padding-left: 15rpx;
				width:692rpx;
				color:#FFFFFF;
				font-size: 24rpx;
				line-height: 24rpx;
				padding-bottom: 27rpx;
				word-wrap:break-word;
			}
		}
	}
	.function{
		display:flex;
		justify-content:space-between;
		align-items: center;
		width: 492rpx;
		height: 80rpx;
		position: fixed;
		bottom: 0rpx;
		left: 0rpx;
		padding: 0rpx 129rpx;
		background:#252525;
		.gift{
			display:flex;
			align-items: center;
			.img{
				width:41rpx;
				height:39rpx;
			}
			.p{
				font-size:30rpx;
				color: #FFFFFF;
				margin-left: 17rpx;
			}
		}
		.center_line{
			width:2rpx;
			height:44rpx;
			background:#747474;
		}
	}
	.purchased{
		.move_p{ //群发影片文字部分样式
			display: flex;
			justify-content: center;
			align-items: center;
			width:100%;
			height:50rpx;
			background-color:#343434;
			.p1{
				font-size: 22rpx;
				color: #FFFFFF;
			}
		}
		
		// 滚动视频列表
		.list{
			// padding-top:128rpx;
			padding-left:28rpx;
			padding-bottom: 85rpx;
			.listPer{
				display:flex;
				border-bottom: 2px solid #343434;
				.left{ // 头像
					padding: 12rpx 0rpx 11rpx 0rpx;
					height: 90rpx;
					width: 90rpx;
					.photo{ // 头像
						background: #646464;
						height: 90rpx;
						width: 90rpx;
						border-radius: 8rpx;
					}
				}
				.content{
					width:100%;
					margin-left:39rpx;
					margin-right:28rpx;
					display:flex;
					flex-direction:column;
					justify-content: space-between;
					.center{ // 内容
						max-width: 500rpx;
						overflow: hidden;
						text-overflow:ellipsis;
						white-space: nowrap;
						margin-top: 10rpx;
						font-size: 20rpx;
						font-weight:400;
						color:#FFFFFF;
						.p{ // 文字内容
							.p1{ // 有的页面需要 作用是放入用户名
								font-size: 26rpx;
								font-weight:500;
								color: #FFFFFF;
								margin-right: 27rpx;
								overflow: hidden;
								text-overflow:ellipsis;
								white-space: nowrap;
							}
						}
					}
					.bottom{
						width: 100%;
						display: flex;
						justify-content:space-between;
						align-items: center;
						margin-bottom: 12rpx;
						.b_left{
							display:flex;
							align-items:center;
							margin-top:11rpx;
							.img{
								width: 23rpx;
								height: 21rpx;
								margin: 0rpx 12rpx 0rpx 4rpx;
							}
							.p{
								font-size:22rpx;
								font-weight:400;
								color: #FFFFFF;
								line-height: 22rpx;
							}
						}
						.b_right{
							display:flex;
							align-items:center;
							margin-top:12rpx;
							.img{
								width: 22rpx;
								height: 16rpx;
							}
							.p{
								margin: 0rpx 1rpx 0rpx 8rpx;
								color: #FFD600;
								font-size: 20rpx;
								font-weight:400;
								line-height: 20rpx;
							}
						}
					}
				}
			}
		}
	}
	
	//-------------------------------------页面遮罩层部分样式-------------------------------
	.mask{    
		position: fixed;
		top:0;
		left:0;
		z-index:999;
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
		width: 100%;
		height: 100%;
		background: rgba(0,0,0,0.5);
		.popup{
			display: flex;
			flex-direction: column;
			justify-content: center;
			align-items: center;
			width:70%;
			border-radius: 15rpx;
			background:#FFFFFF;
			.button{
				width:100%;
				font-size: 35rpx;
				line-height: 35px;
				padding:15rpx 0rpx;
				text-align: center;
				border-bottom: 2rpx solid #999999;
				// height: 80rpx;
			}
		}
	}
	//-------------------------------------页面遮罩层部分样式-------------------------------
}
</style>